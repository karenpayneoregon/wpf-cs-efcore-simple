// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using WpfApp1.Annotations;

namespace WpfApp1.Models
{
    public partial class Employees : INotifyPropertyChanged
    {
        private int _employeeId;
        private string _firstName;
        private string _lastName;
        private string _email;
        private string _phoneNumber;
        private DateTime _hireDate;
        private int _jobId;
        private decimal _salary;
        private int? _managerId;
        private int? _departmentId;

        public Employees()
        {
            InverseManager = new HashSet<Employees>();
        }

        public int EmployeeId
        {
            get => _employeeId;
            set
            {
                if (value == _employeeId) return;
                _employeeId = value;
                OnPropertyChanged();
            }
        }

        public string FirstName
        {
            get => _firstName;
            set
            {
                if (value == _firstName) return;
                _firstName = value;
                OnPropertyChanged();
            }
        }

        public string LastName
        {
            get => _lastName;
            set
            {
                if (value == _lastName) return;
                _lastName = value;
                OnPropertyChanged();
            }
        }

        public string Email
        {
            get => _email;
            set
            {
                if (value == _email) return;
                _email = value;
                OnPropertyChanged();
            }
        }

        public string PhoneNumber
        {
            get => _phoneNumber;
            set
            {
                if (value == _phoneNumber) return;
                _phoneNumber = value;
                OnPropertyChanged();
            }
        }

        public DateTime HireDate
        {
            get => _hireDate;
            set
            {
                if (value.Equals(_hireDate)) return;
                _hireDate = value;
                OnPropertyChanged();
            }
        }

        public int JobId
        {
            get => _jobId;
            set
            {
                if (value == _jobId) return;
                _jobId = value;
                OnPropertyChanged();
            }
        }

        public decimal Salary
        {
            get => _salary;
            set
            {
                if (value == _salary) return;
                _salary = value;
                OnPropertyChanged();
            }
        }

        public int? ManagerId
        {
            get => _managerId;
            set
            {
                if (value == _managerId) return;
                _managerId = value;
                OnPropertyChanged();
            }
        }

        public int? DepartmentId
        {
            get => _departmentId;
            set
            {
                if (value == _departmentId) return;
                _departmentId = value;
                OnPropertyChanged();
            }
        }

        public virtual Employees Manager { get; set; }
        public virtual ICollection<Employees> InverseManager { get; set; }
        public event PropertyChangedEventHandler PropertyChanged;

        [NotifyPropertyChangedInvocator]
        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}